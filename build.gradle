apply plugin: 'java'

repositories {
    jcenter()
}

dependencies {

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
	// https://mvnrepository.com/artifact/org.slf4j/jcl-over-slf4j
	//compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.25'
	// https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
	compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
	// https://mvnrepository.com/artifact/ch.qos.logback/logback-core
	compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

jar {
    manifest {
        attributes(
                "Manifest-Version": 1.0,
                'Main-Class': 'Library'
        )
    }
}

processResources {
    exclude { "**/*.*" }
}

task addDependToManifest() {
    if (!configurations.runtime.isEmpty()) {
        jar.manifest.attributes('Class-Path': "../resources/ " + configurations.runtime.collect { it.name }.join(' '))
    }
    println 'addDependToManifest'
}
jar.dependsOn += addDependToManifest

task copyDependencies(type: Copy) {
	from configurations.runtime
	destinationDir = file('build/libs/')
	println 'copyDependencies'
}
jar.dependsOn += copyDependencies

task copyResources(type: Copy) {
    sourceSets.main.resources.srcDirs.each {
        from it
        into "build/resources"
    }
    println 'copyResources'
}
jar.dependsOn += copyResources

task copyLauncher(type:Copy) {
	from "misc/launcher.bat"
	into "build/"
	println 'copyLauncher' 
}
jar.dependsOn += copyLauncher

println 'build complete!'

